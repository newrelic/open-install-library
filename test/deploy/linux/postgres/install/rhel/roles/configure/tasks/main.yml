---
- debug:
    msg: Install Postgres

- name: Set default create_newrelic_user (default not create)
  set_fact:
    create_newrelic_user: "false"
  when: create_newrelic_user is undefined

- name: Set default create_env_var (default not create)
  set_fact:
    create_env_var: "false"
  when: create_env_var is undefined

- name: update packages
  shell: yum update -y
  become: true 

- name: Copy repo file 
  template:
    src: pgdg.repo
    dest: /etc/yum.repos.d/pgdg.repo
  become: true

- name: update cache 
  shell: sudo yum makecache -y
  become: true

- name: install postgress
  shell: sudo yum install postgresql12 postgresql12-server -y
  become: true 

- name: init db
  shell: sudo /usr/pgsql-12/bin/postgresql-12-setup initdb
  become: true 

- name: create symlink and run postgres
  shell: sudo systemctl enable --now postgresql-12
  become: true 

- block:
  - name: Set postgres password
    shell: sudo -u postgres psql -c "ALTER USER postgres WITH PASSWORD 'test';"
  - name: Create newrelic_user
    shell: sudo -u postgres psql -c "CREATE USER newrelic WITH PASSWORD 'Virtuoso4all!'; GRANT SELECT ON pg_stat_database TO newrelic; GRANT SELECT ON pg_stat_database_conflicts TO newrelic; GRANT SELECT ON pg_stat_bgwriter TO newrelic;"
  when: create_newrelic_user|bool

- name: Use template of pg_hba.conf with md5 auth
  template:
    src: pg_hba.conf
    dest: /var/lib/pgsql/12/data/pg_hba.conf
  become: true

- name: restart postgres  
  shell: systemctl restart postgresql-12.service
  become: true

- block:
  - name: Export USERNAME
    shell: "echo export NR_CLI_USERNAME=newrelic >> ~/.bashrc"
  - name: Export PASSWORD
    shell: "echo export NR_CLI_PASSWORD=Virtuoso4all! >> ~/.bashrc"
  - name: Export DATABASE
    shell: "echo export NR_CLI_DATABASE=postgres >> ~/.bashrc"
  - name: Export PORT
    shell: "echo export NR_CLI_PORT=5432 >> ~/.bashrc"
  - name: Export ENABLE_SSL
    shell: "echo export NR_CLI_SSL=false >> ~/.bashrc"
  - name: Export NR_CLI_CERT_AUTH_FILE
    shell: "echo export NR_CLI_CERT_AUTH_FILE=notUsed >> ~/.bashrc"
  - name: Export NR_CLI_TRUST_SERVER_CERTIFICATE
    shell: "echo export NR_CLI_TRUST_SERVER_CERTIFICATE=true >> ~/.bashrc"
  - name: Export NR_CLI_CLIENT_CERT_FILE
    shell: "echo export NR_CLI_CLIENT_CERT_FILE=notUsed >> ~/.bashrc"
  - name: Export NR_CLI_CERT_KEY
    shell: "echo export NR_CLI_CERT_KEY=notUsed >> ~/.bashrc"
  when: create_env_var|bool
