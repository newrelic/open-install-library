---
- debug:
    msg: Install Postgres

- name: Set default create_newrelic_user (default not create)
  set_fact:
    create_newrelic_user: "false"
  when: create_newrelic_user is undefined

- name: Set default create_env_var (default not create)
  set_fact:
    create_env_var: "false"
  when: create_env_var is undefined

- name: Install postgresql
  apt:
    name: ['postgresql']
    update_cache: yes
    state: latest
  become: true

- block:
  - name: Set postgres password
    shell: sudo -u postgres psql -c "ALTER USER postgres WITH PASSWORD 'newpassword';"
  - name: Create newrelic_user
    shell: sudo -u postgres psql -c "CREATE USER newrelic WITH PASSWORD 'Virtuoso4all!'; GRANT SELECT ON pg_stat_database TO newrelic; GRANT SELECT ON pg_stat_database_conflicts TO newrelic; GRANT SELECT ON pg_stat_bgwriter TO newrelic;"
  when: create_newrelic_user|bool
  
- block:
  - name: Export USERNAME
    shell: "echo export NR_CLI_USERNAME=newrelic >> ~/.bashrc"
  - name: Export PASSWORD
    shell: "echo export NR_CLI_PASSWORD=Virtuoso4all! >> ~/.bashrc"
  - name: Export DATABASE
    shell: "echo export NR_CLI_DATABASE=postgres >> ~/.bashrc"
  - name: Export PORT
    shell: "echo export NR_CLI_PORT=5432 >> ~/.bashrc"
  - name: Export ENABLE_SSL
    shell: "echo export NR_CLI_SSL=false >> ~/.bashrc"
  - name: Export NR_CLI_CERT_AUTH_FILE
    shell: "echo export NR_CLI_CERT_AUTH_FILE=notUsed >> ~/.bashrc"
  - name: Export NR_CLI_TRUST_SERVER_CERTIFICATE
    shell: "echo export NR_CLI_TRUST_SERVER_CERTIFICATE=true >> ~/.bashrc"
  - name: Export NR_CLI_CLIENT_CERT_FILE
    shell: "echo export NR_CLI_CLIENT_CERT_FILE=notUsed >> ~/.bashrc"
  - name: Export NR_CLI_CERT_KEY
    shell: "echo export NR_CLI_CERT_KEY=notUsed >> ~/.bashrc"
  when: create_env_var|bool
