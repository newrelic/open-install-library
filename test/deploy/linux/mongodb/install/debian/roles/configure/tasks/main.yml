---
- debug:
    msg: Install MongoDB

- name: Set default create_env_var (default not create)
  set_fact:
    create_env_var: "false"
  when: create_env_var is undefined

- name: Set default create_newrelic_user (default not create)
  set_fact:
    create_newrelic_user: "false"
  when: create_newrelic_user is undefined

- name: Install necessary dependencies
  apt:
    name: ['dirmngr','gnupg','apt-transport-https','software-properties-common','ca-certificates']
    update_cache: yes
    state: latest
  become: yes

- name: Add the MongoDB GPG key
  shell: curl -fsSL https://pgp.mongodb.com/server-6.0.asc | sudo apt-key add -

- name: Enable MongoDB repository
  shell: add-apt-repository 'deb https://repo.mongodb.org/apt/debian buster/mongodb-org/6.0 main'
  become: yes

- name: Install MongoDB
  apt:
    name: ['mongodb-org']
    update_cache: yes
    state: latest
  become: yes

- name: Copy config file for MongoDB
  template: 
      src: mongod.conf
      dest: /etc/mongod.conf
  become: yes

- name: Restart mongodb service
  shell: "systemctl restart mongod"
  become: yes

- name: Pause for 10 seconds
  pause:
    seconds: 10

- block:
  - name: Copy commands file for MongoDB
    template: 
        src: commands.js
        dest: /tmp
    become: yes
  - name: Copy initiate file for MongoDB
    template: 
        src: initiate_script.js
        dest: /tmp
    become: yes
  - name: Use initiate file
    shell: mongosh < /tmp/initiate_script.js
    args:
      executable: /bin/bash
  - name: Use commands file
    shell: mongosh < /tmp/commands.js
    args:
      executable: /bin/bash
  when: create_newrelic_user|bool

- block:
  - name: Export CLUSTER_NAME
    shell: "echo export NR_CLI_DB_CLUSTERNAME=test >> ~/.bashrc"
  - name: Export USERNAME
    shell: "echo export NR_CLI_DB_USERNAME=newrelic >> ~/.bashrc"
  - name: Export PASSWORD
    shell: "echo export NR_CLI_DB_PASSWORD=Virtuoso4all! >> ~/.bashrc"
  - name: Export AUTHSOURCE
    shell: "echo export NR_CLI_DB_AUTH=admin >> ~/.bashrc"
  - name: Export HOSTNAME
    shell: "echo export NR_CLI_DB_HOSTNAME=localhost >> ~/.bashrc"
  - name: Export PORT
    shell: "echo export NR_CLI_DB_PORT=27017 >> ~/.bashrc"
  - name: Export ENABLE_SSL
    shell: "echo export NR_CLI_SSL=false >> ~/.bashrc"
  - name: Export NR_CLI_CERT_AUTH_FILE
    shell: "echo export NR_CLI_CERT_AUTH_FILE=notUsed >> ~/.bashrc"
  - name: Export NR_CLI_CLIENT_CERT_FILE
    shell: "echo export NR_CLI_CLIENT_CERT_FILE=notUsed >> ~/.bashrc"
  when: create_env_var|bool
