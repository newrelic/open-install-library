---
- debug:
    msg: Install MySQL

- name: Set MySQL RPM file
  set_fact:
    mysql_rpm_file: mysql80-community-release-el7-7.noarch.rpm

- name: Set default create_newrelic_user (default not create)
  set_fact:
    create_newrelic_user: "false"
  when: create_newrelic_user is undefined

- name: Set default create_env_var (default not create)
  set_fact:
    create_env_var: "false"
  when: create_env_var is undefined

- name: Install epel
  shell: "amazon-linux-extras install epel -y"
  become: true

- name: Install wget
  yum:
    name: "wget"
    state: latest
  become: true

- name: Download MySQL repository
  shell: "wget https://dev.mysql.com/get/{{ mysql_rpm_file }}"
  become: true

- name: Add MySQL Repository
  ansible.builtin.yum: 
    name: "{{ mysql_rpm_file }}"
    state: present
    lock_timeout: 180
  become: true

- name: Import most recent repo key
  shell: "rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2023"
  become: true

- name: Install MySQL
  ansible.builtin.yum: 
    name: mysql-community-server
    state: present
    lock_timeout: 180
  become: true

- name: Install systemctl
  shell: "yum install -y /usr/bin/systemctl; systemctl --version"
  become: true

- name: Disable mysqld
  shell: "systemctl stop mysqld"
  become: true

- name: Remove /var/lib/mysql/*
  shell: "rm -rf /var/lib/mysql/*"
  become: true

- name: Start mysqld service
  shell: "systemctl start mysqld"
  become: true

- name: Get temporary pwd for mysql
  shell: "grep 'temporary password' /var/log/mysqld.log | awk '{print $13}'"
  register: PW
  become: true

- name: Set password as variable
  set_fact:
    PW={{ PW.stdout }}

- name: Create directory for limit file
  shell: "mkdir /etc/systemd/system/mysqld.service.d"
  become: true

- name: Create file for limit
  shell: "touch /etc/systemd/system/mysqld.service.d/limits.conf"
  become: true

- name: Fill conf file
  copy: 
    dest: "/etc/systemd/system/mysqld.service.d/limits.conf"
    content: |
      [Service]
      LimitNOFILE = 65535
  become: true

- name: Restart daemon
  shell: systemctl daemon-reload
  become: true

- name: Restart Mysql
  shell: systemctl restart mysqld
  become: true

- name: Alter root pwd
  command: |
    mysql -u root -p{{ PW }} --connect-expired-password -ne "ALTER USER 'root'@'localhost' IDENTIFIED BY 'TestPassword123$';"
  become: true

- name: Create Database
  command: |
    mysql -u root -pTestPassword123$ -ne "CREATE DATABASE IF NOT EXISTS MysqlSample;"
  become: true

- block:
  - name: Remove previous created user
    command: |
      mysql -u root -pTestPassword123$ -ne "DROP USER 'newrelic'@'localhost';"
    become: true
    ignore_errors: true
  - name: Create User
    command: |
      mysql -u root -pTestPassword123$ -ne "CREATE USER 'newrelic'@'localhost' IDENTIFIED BY 'Virtuoso4all!';"
    become: true
  - name: Grant replication permission to user
    command: |
      mysql -u root -pTestPassword123$ -ne "GRANT REPLICATION CLIENT ON *.* TO 'newrelic'@'localhost';"
    become: true
  - name: Grant select permission to user
    command: |
      mysql -u root -pTestPassword123$ -ne "GRANT SELECT ON *.* TO 'newrelic'@'localhost';"
    become: true
  when: create_newrelic_user|bool

- block:
  - name: Export USERNAME
    shell: "echo export NR_CLI_DB_USERNAME=newrelic >> ~/.bashrc"
  - name: Export PASSWORD
    shell: "echo export NR_CLI_DB_PASSWORD=Virtuoso4all! >> ~/.bashrc"
  - name: Export HOSTNAME
    shell: "echo export NR_CLI_DB_HOSTNAME=localhost >> ~/.bashrc"
  - name: Export DB_PORT
    shell: "echo export NR_CLI_DB_PORT=3306 >> ~/.bashrc"
  - name: Export NR_CLI_DB_ROOT_PASSWORD
    shell: "echo export NR_CLI_DB_ROOT_PASSWORD=TestPassword123$ >> ~/.bashrc"
  when: create_env_var|bool

- name: Start mysql service
  shell: "systemctl enable --now mysqld"
  become: true
