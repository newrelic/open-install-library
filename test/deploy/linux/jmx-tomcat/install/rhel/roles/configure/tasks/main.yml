---
- debug:
    msg: Install JMX-Tomcat

- name: Set default create_env_var (default not create)
  set_fact:
    create_env_var: "false"
  when: create_env_var is undefined

- name: update packages
  shell: yum update -y
  become: true

- name: add tomcatgroup
  shell: groupadd tomcat
  become: true
  ignore_errors: true

- name: add tomcat user
  shell: useradd -s /bin/false -g tomcat -d /opt/tomcat tomcat
  become: true
  ignore_errors: true

- name: Download Tomcat
  shell: wget https://downloads.apache.org/tomcat/tomcat-8/v8.5.98/bin/apache-tomcat-8.5.98.zip -P /tmp
  become: true

- name: Install unzip and java
  shell: yum install java -y
  become: true

- name: export JAVA_HOME
  shell: export JAVA_HOME=$(readlink -f /usr/bin/javac | sed "s:/bin/javac::")
  become: true

- name: Unpack Tomcat
  shell: unzip /tmp/apache-tomcat-8.5.98.zip -d /opt
  become: true

- name: Give ownership 
  shell: chgrp -R tomcat /opt/apache-tomcat-8.5.98/
  become: true

- name: give read access
  shell: chmod -R g+r /opt/apache-tomcat-8.5.98/conf
  become: true

- name: give execute access
  shell: chmod g+x /opt/apache-tomcat-8.5.98/conf
  become: true

- name: Make the tomcat user the owner of the webapps, work, temp, and logs directories
  shell: chown -R tomcat /opt/apache-tomcat-8.5.98/webapps/ /opt/apache-tomcat-8.5.98/work/ /opt/apache-tomcat-8.5.98/temp/ /opt/apache-tomcat-8.5.98/logs/
  become: true 

- name: Copy file with JMX configured
  template:
    src: setenv.sh
    dest: /opt/apache-tomcat-8.5.98/bin/setenv.sh
  become: true

- name: Create service tomcat file
  template:
    src: tomcat.service
    dest: /etc/systemd/system/tomcat.service
  become: true

- name: Set permissions for tomcat scripts
  shell: chmod 755 /opt/apache-tomcat-8.5.98/bin/*.sh
  become: true

- name: reload daemon
  shell: systemctl daemon-reload
  become: true
  
- name: Start tomcat
  shell: systemctl start tomcat && systemctl enable tomcat
  become: true

- block:
  - name: Export USERNAME
    shell: "echo export NR_CLI_JMX_USERNAME=admin >> ~/.bashrc"
  - name: Export PASSWORD
    shell: "echo export NR_CLI_JMX_PASSWORD=admin >> ~/.bashrc"
  - name: Export HOSTNAME
    shell: "echo export NR_CLI_JMX_HOST=localhost >> ~/.bashrc"
  - name: Export DB_PORT
    shell: "echo export NR_CLI_JMX_PORT=9999 >> ~/.bashrc"
  - name: Export Enable_SSL
    shell: "echo export NR_CLI_SSL_ENABLED=n >> ~/.bashrc"
  - name: Export KEYSTORE
    shell: "echo export NR_CLI_KEYSTORE=notUsed >> ~/.bashrc"
  - name: Export KEYSTORE_PASSWORD
    shell: "echo export NR_CLI_KEYSTORE_PASSWORD=notUsed >> ~/.bashrc"
  - name: Export TRUST STORE
    shell: "echo export NR_CLI_TRUSTSTORE=notUsed >> ~/.bashrc"
  - name: Export TRUST STORE PASSWORD
    shell: "echo export NR_CLI_TRUSTSTORE_PASSWORD=notUsed >> ~/.bashrc"
  when: create_env_var|bool
