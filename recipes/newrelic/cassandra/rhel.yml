# Visit our schema definition for additional information on this file format
# https://github.com/newrelic/open-install-library/blob/main/docs/recipe-spec/recipe-spec.md#schema-definition

name: cassandra-open-source-integration
displayName: Cassandra Open Source Integration
description: New Relic install recipe for default Cassandra Open Source on-host integration (via Infra-Agent)
repository: https://github.com/newrelic/nri-cassandra

installTargets:
  - type: host
    os: linux
    platform: "amazon"
    platformVersion: "2"
  - type: host
    os: linux
    platform: "centos"
  - type: host
    os: linux
    platform: "redhat"

# keyword convention for dealing with search terms that could land someone on this instrumentation project
keywords:
  - Infrastructure
  - Integration
  - Cassandra

# Examine Infrastructure events for correlated data
processMatch:
  - cassandra
  - cassandradaemon
  - cqlsh

# Matches partial list of the Log forwarding parameters
logMatch:
  - name: cassandra-system
    file: /var/log/cassandra/system.log*
  - name: cassandra-debug
    file: /var/log/cassandra/debug.log*

validationNrql: "SELECT count(*) from CassandraSample where hostname like '{{.HOSTNAME}}%' SINCE 10 minutes ago"

inputVars:
  - name: "NR_CLI_DB_USERNAME"
    prompt: "Cassandra connection Username (via JMX)"
  - name: "NR_CLI_DB_PASSWORD"
    prompt: "Cassandra connection Password (via JMX)"
    secret: true
  - name: "NR_CLI_DB_HOSTNAME"
    prompt: "Cassandra node Hostname (default: localhost)"
    default: "localhost"
  - name: "NR_CLI_DB_PORT"
    prompt: "Cassandra Port (default: 7199)"
    default: 7199

install:

  version: "3"
  silent: true

  tasks:
    default:
      cmds:
        - task: assert_pre_req
        - task: setup
        - task: restart

    assert_pre_req:
      cmds:
        - |
          SERVICE_EXIST=$(sudo systemctl status newrelic-infra.service | grep "Active" | wc -l)
          if [ $SERVICE_EXIST -eq 0 ]; then
            echo "The newrelic-infra agent service is NOT installed on the host, but is required to install this integration." >> /dev/stderr
            exit 1
          fi

    setup:
      label: "Installing cassandra integration..."
      cmds:
        - |
          sudo mkdir -p "/etc/newrelic-infra/integrations.d"
        - |
          sudo yum update -y
        - |
          sudo yum install nri-cassandra -y
        - |
          if [ -f /etc/newrelic-infra/integrations.d/cassandra-config.yml ]; then
            sudo rm /etc/newrelic-infra/integrations.d/cassandra-config.yml;
          fi

          sudo cp /etc/newrelic-infra/integrations.d/cassandra-config.yml.sample /etc/newrelic-infra/integrations.d/cassandra-config.yml;

        - |
          sudo tee -a /etc/newrelic-infra/integrations.d/cassandra-config.yml > /dev/null <<"EOT"
          integration_name: com.newrelic.cassandra

          instances: 
            - name: cassandra-db-metrics
              command: metrics
              arguments:
                hostname: {{.NR_CLI_DB_HOSTNAME}}
                port: {{.NR_CLI_DB_PORT}}
                username: {{.NR_CLI_DB_USERNAME}}
                password: {{.NR_CLI_DB_PASSWORD}}
                remote_monitoring: true
            - name: cassandra-db-inventory
              command: inventory
              arguments:
                hostname: {{.NR_CLI_DB_HOSTNAME}}
                config_path: /etc/cassandra/cassandra.yaml
                remote_monitoring: true
          EOT

    restart:
      cmds:
        - sudo systemctl restart newrelic-infra.service
