name: mongodb-open-source-integration
displayName: MongoDB Open Source Integration
description: New Relic install recipe for default MongoDB Open Source on-host integration (via Infra-Agent)
repository: https://github.com/newrelic/nri-mongodb

installTargets:
  - type: host
    os: linux
    platform: amazon
    platformVersion: "2"
  - type: host
    os: linux
    platform: "centos"
  - type: host
    os: linux
    platform: "redhat"

# keyword convention for dealing with search terms that could land someone on this instrumentation project
keywords:
  - Infrastructure
  - Integration
  - mongodb

# Examine Infrastructure events for correlated data
processMatch:
  - httpd
  - mongodb

# Matches partial list of the Log forwarding parameters
# https://docs.newrelic.com/docs/logs/enable-log-management-new-relic/enable-log-monitoring-new-relic/forward-your-logs-using-infrastructure-agent#parameters
logMatch:
  - name: mongoDB
    file: /var/log/mongodb/*.log

# NRQL the newrelic-cli will use to validate the agent/integration this recipe
# installed is successfully sending data to New Relic
validationNrql: "SELECT count(*) from MongoCollectionSample where hostname like '{{.HOSTNAME}}%' FACET entityGuid SINCE 10 minutes ago"

inputVars:
  - name: "NR_CLI_HOSTNAME"
    prompt: "Please enter your hostname below. If none is provided, the default value: localhost, will be used.",
    default: "localhost"
  - name: "NR_CLI_USERNAME"
    prompt: "Please enter your username."
  - name: "NR_CLI_PASSWORD"
    prompt: "Please enter your password"
  - name: "NR_CLI_SSL_ENABLED"
    prompt: "Are you using SSL? (y/n)"
  - name: "NR_CLI_AUTHSOURCE"
    default: "admin"
    prompt: "Please configrm default admin authorization source"
  - name: "NR_CLI_CLUSTER_NAME"
    prompt: "Please enter your cluster name."

install:

  version: "3"
  silent: true

  tasks:
    default:
      cmds:
        - task: assert_pre_req
        - task: setup
        - task: restart
        
    assert_pre_req:
      cmds:
        - |
          SERVICE_EXIST=$(sudo systemctl status newrelic-infra.service | grep "Active" | wc -l)
          if [ $SERVICE_EXIST -eq 0 ]; then
            echo "The newrelic-infra agent service is NOT installed on the host, but is required to install this integration." >> /dev/stderr
            exit 1
          fi

    setup:
      label: "Installing mongodb integration..."
      cmds:
        - |
          sudo mkdir -p "/etc/newrelic-infra/integrations.d"
        - |
          sudo yum update -y
        - |
          sudo yum install nri-mongodb -y
        - |
          if [ -f /etc/newrelic-infra/integrations.d/mongodb-config.yml ]; then
            sudo rm /etc/newrelic-infra/integrations.d/mongodb-config.yml;
          fi

          sudo cp /etc/newrelic-infra/integrations.d/mongodb-config.yml.sample /etc/newrelic-infra/integrations.d/mongodb-config.yml;

        - | 
          sudo tee /etc/newrelic-infra/integrations.d/mongodb-config.yml > /dev/null <<"EOT"
          integration_name: com.newrelic.mongodb

          instances:
            - name: mongodb-all
              command: all
              arguments:
                host: {{.NR_CLI_HOSTNAME}}
                cluster_name: {{.NR_CLI_CLUSTER_NAME}}
                port: {{.NR_CLI_PORT}}
                username: {{.NR_CLI_USERNAME}}
                password: {{.NR_CLI_PASSWORD}}
                auth_source: {{.{{.NR_CLI_ADMINN}}}}
                ssl: {{.NR_CLI_SSL_ENABLED}}
                ssl_insecure_skip_verify: true
                ssl_ca_certs: /sample/path/to/ca_certs
                filters: '{“db1”:null,”db2”:[“collection1”,”collection2”],”db3”:[]}'
          EOT

    restart:
      cmds:
        - sudo systemctl restart newrelic-infra.service
