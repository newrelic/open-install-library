# Visit our schema definition for additional information on this file format
# https://github.com/newrelic/open-install-library/blob/main/docs/recipe-spec/recipe-spec.md#schema-definition

name: node-agent-installer
displayName: Node Agent
description: New Relic install recipe for instrumenting Node applications
repository: https://github.com/newrelic/node-newrelic

installTargets:
  - type: application
    os: linux

keywords:
  - Apm
  - node

processMatch:
  - node
  - pm2

preInstall:
  requireAtDiscovery: |
      ASSERT_NODE_INSTALLED=$(sudo -i -u $SUDO_USER command -v node)
      if [ -z "$ASSERT_NODE_INSTALLED" ] ; then
        exit 1
      fi

      LOWEST_SUPPORTED_MAJOR_NODE_VERSION=16
      NODEJS_BINARY_PATH=$(command -v node)
      INSTALLED_MAJOR_NODE_VERSION=$($NODEJS_BINARY_PATH -v | awk -F '[^0-9]+' '{ print $2 }')
      if [ "$INSTALLED_MAJOR_NODE_VERSION" -lt "$LOWEST_SUPPORTED_MAJOR_NODE_VERSION" ]; then
        echo "Error: Node.js version not supported. Please upgrade to the latest supported version." >&2
        exit 132
      fi

      ASSERT_NPM_INSTALLED=$(sudo -i -u $SUDO_USER command -v npm)
      if [ -z "$ASSERT_NPM_INSTALLED" ] ; then
        exit 2
      fi

      # Only PM2 is supported at this time
      ASSERT_PM2_INSTALLED=$(sudo -i -u $SUDO_USER command -v pm2)
      if [ -z "$ASSERT_PM2_INSTALLED" ] ; then
        echo "Error: PM2 is required to complete installation." >&2
        exit 132
      fi

      IS_PM2_RUNNING=$(sudo ps aux | grep pm2 | grep -v grep | wc -l)
      if [ $IS_PM2_RUNNING -eq 0 ] ; then
        echo "Error: PM2 not running. Please start PM2 and retry the installation." >&2
        exit 132
      fi
      exit 0

validationNrql: "SELECT count(*) FROM NrIntegrationError WHERE purpose = 'New Relic CLI configuration validation' AND hostname like '{{.HOSTNAME}}%' since 5 minutes ago"

successLinkConfig:
  type: EXPLORER
  filter: '"`tags.language` = ''nodejs''"'

install:
  version: '3'
  silent: true

  tasks:
    default:
      cmds:
        - task: verify_continue
        - task: setup
        - task: install_agent
        - task: cli_validate
        - task: cleanup

    verify_continue:
      cmds:
        - |
          YELLOW='\033[0;33m'
          NOCOLOR='\033[0m'
          echo -e "${YELLOW}
          ================================================================================
          =                                                                              =
          =                                   Warning                                    =
          =                                                                              =
          =       This installation will automatically restart all PM2 services          =
          =       that run Node applications upon completion.                            =
          =                                                                              =
          ================================================================================
          ${NOCOLOR}"
          echo "
          If you are hosting your Node application differently then check out our other installation options:
          https://docs.newrelic.com/docs/agents/nodejs-agent/installation-configuration/install-nodejs-agent/.
          "
          NEW_RELIC_ASSUME_YES="{{.NEW_RELIC_ASSUME_YES}}"
          if [[ "$NEW_RELIC_ASSUME_YES" != "true" ]]; then
            while :; do
              echo -n "Do you want to install the Node Agent Y/N (default: Y)? "
              read answer
              echo ""
              NEW_RELIC_CONTINUE=$(echo "${answer^^}" | cut -c1-1)
              if [[ -z "$NEW_RELIC_CONTINUE" ]]; then
                NEW_RELIC_CONTINUE="Y"
              fi
              if [[ "$NEW_RELIC_CONTINUE" == "N" ]]; then
                echo "Exiting the installation"
                exit 130
              fi
              if [[ "$NEW_RELIC_CONTINUE" == "Y" ]]; then
                break
              fi
              echo -e "Please type Y or N only."
            done
          fi

    setup:
      label: 'Installing Node Introspector...'
      cmds:
        - |
          sudo -i -u $SUDO_USER npm i -g @newrelic/introspector-node 1> /dev/null 2> /dev/null || true

    install_agent:
      label: 'Finding Node processes and installing Node agent'
      cmds:
        - |
          FOUND_PROCESSES=$(sudo -i -u $SUDO_USER newrelic-introspector-node list)
          if [ "$FOUND_PROCESSES" == "" ] ||  [ "$FOUND_PROCESSES" == "[]" ]; then
            echo "No Node processes found running on the host" >&2
            exit 130
          else
            PROCESSES=$(echo "$FOUND_PROCESSES" | sed -e "s/\[ //" | sed -e "s/ \]//")
            for PID in "${PROCESSES[@]}"
            do
              INTROSPECTION_DATA=$(sudo -i -u $SUDO_USER newrelic-introspector-node introspect --pid ${PID})
              COMMAND=$( echo "${INTROSPECTION_DATA}" | grep -oP '.*\K(?<=pm_exec_path":").*?(?=\")' )

              if [[ "{{.NEW_RELIC_ASSUME_YES}}" != "true" ]]; then
                printf "This is the path to the service being instrumented: "
                printf " $COMMAND"
                printf "\nEnter an app name: "
                read -r appName
              else
                appName="$COMMAND"
              fi

              LSI_OUTPUT=$(sudo -i -u $SUDO_USER NEW_RELIC_REGION="${NEW_RELIC_REGION}" newrelic-introspector-node instrument --pid ${PID} --licenseKey {{.NEW_RELIC_LICENSE_KEY}} --appName "${appName}") 1> /dev/null 2> /dev/null || true
            done

            echo -e "    \033[1;33mIMPORTANT: Your application needs to be active to transmit transaction data.  If it is a web service, make sure that it is receiving requests.  If it is a background service, make sure that it is performing work. The validation that occurs in the next step will fail if transaction data is not found within the timeout period."
          fi

    cli_validate:
      cmds:
        - sudo NEW_RELIC_REGION={{.NEW_RELIC_REGION}} NEW_RELIC_API_KEY={{.NEW_RELIC_API_KEY}} NEW_RELIC_ACCOUNT_ID={{.NEW_RELIC_ACCOUNT_ID}} NEW_RELIC_LICENSE_KEY={{.NEW_RELIC_LICENSE_KEY}} /usr/local/bin/newrelic diagnose validate

    cleanup:
      label: 'Uninstalling Node Introspector...'
      cmds:
        - |
          sudo -i -u $SUDO_USER npm uninstall -g @newrelic/introspector-node 1> /dev/null 2> /dev/null || true
