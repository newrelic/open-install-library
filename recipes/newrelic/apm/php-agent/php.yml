# Visit our schema definition for additional information on this file format
# https://github.com/newrelic/open-install-library/blob/main/docs/recipe-spec/recipe-spec.md#schema-definition

name: php-agent-installer
displayName: PHP Agent Installer
description: New Relic install recipe for the PHP agent
repository: https://github.com/newrelic/newrelic-php-agent

installTargets:
  - type: host
    os: linux

keywords:
  - PHP

processMatch:
  - /php-fpm/

validationNrql: "SELECT count(*) from Transaction WHERE host like '{{.HOSTNAME}}%' facet entityGuid since 10 minutes ago"

inputVars:
  - name: "NR_PHP_APPLICATION"
    prompt: "What is the name of your PHP application?"
    default: "PHP Application"
  - name: "NR_PHP_RESTART"
    prompt: "Restart the PHP application after installation? (y/n)"
    default: "y"

install:
  version: "3"

  env:
    NEW_RELIC_DISTRIBUTED_TRACING_ENABLED: true

  tasks:
    default:
      cmds:
        - task: install_packages
        - task: config_newrelic_ini
        - task: finalize_agent_config
        - task: restart_services
        - task: send_transaction

    install_packages:
      cmds:
        - echo "Install php-agent packages"
        - |
          if [ ! -f /etc/apt/sources.list.d/newrelic.list ]; then
            curl https://download.newrelic.com/548C16BF.gpg | sudo apt-key add -
            echo "deb http://nr-downloads-private.s3-website-us-east-1.amazonaws.com/75ac22b116/debian newrelic-testing non-free" > /etc/apt/sources.list.d/newrelic.list
          fi
          DEBIAN_FRONTEND=noninteractive sudo apt update
          DEBIAN_FRONTEND=noninteractive apt -y install newrelic-php5

    config_newrelic_ini:
      cmds:
        - echo "TODO: configure newrelic.ini"

    finalize_agent_config:
      cmds:
        - echo "TODO: finalize agent config"
        - NR_INSTALL_KEY="{{.NEW_RELIC_LICENSE_KEY}}" NR_PHP_APPLICATION="{{.NR_PHP_APPLICATION}}" newrelic-install install

    restart_services:
      cmds:
        - |
          if [ -z "{{.NR_PHP_RESTART}}" ]; then
            echo "Restarting php-fpm"
            sudo service php-fpm restart
          else
            echo "You will need to restart your PHP application in order for instrumentation to be enabled."
          fi
    send_transaction:
      cmds:
        - echo "Send queryable transactions."
        - |
          TMP_INSTALL_DIR="/tmp/php-agent-install"
          cd $TMP_INSTALL_DIR
          #
          # Expand the log files from the most recent installation attempt,
          # and get the name of the most recent log file.
          #
          tar -xvf $(ls -t nrinstall*.tar | head -1)
          NR_INSTALL_LOG=$(ls -t nrinstall*.log | head -1)
          #
          # Get the web server PHP INI directories that the most recent 
          # installation attempt used.
          #
          WEB_PHP_INI_DIR=$(sed -n 's/.*pi_inidir_dso=\(.*\)\/conf.d/\1/p' $NR_INSTALL_LOG)
          WEB_NR_INI_DIR=$(sed -n 's/.*pi_inidir_dso=\(.*\/\)/\1/p' $NR_INSTALL_LOG)
          if [ -z "${WEB_PHP_INI_DIR}" ]; then
              WEB_PHP_INI_DIR=$WEB_NR_INI_DIR
          fi
          #
          # The first transaction initializes the app.
          # The second transaction is for luck.
          # The third time’s the charm.
          #
          if [ -n "${WEB_PHP_INI_DIR}" ]; then
          #
          # Web server was detected. Send transaction associated with the webserver php.ini
          # and the newrelic.ini file associated with that web server.
          #
             php -c "${WEB_PHP_INI_DIR}/php.ini" -c "${WEB_NR_INI_DIR}/newrelic.ini" -n --ini &>/dev/null
             php -c "${WEB_PHP_INI_DIR}/php.ini" -c "${WEB_NR_INI_DIR}/newrelic.ini" -n --ini &>/dev/null
             php -c "${WEB_PHP_INI_DIR}/php.ini" -c "${WEB_NR_INI_DIR}/newrelic.ini" -n --ini &>/dev/null
          else
          #
          # No web server detected, this was a pure PHP CLI php agent installation.
          #
             php —-ini
             php —-ini
             php —-ini
          fi
        - echo "Done sending transactions."
