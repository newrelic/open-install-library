# Visit our schema definition for additional information on this file format
# https://github.com/newrelic/open-install-library/blob/main/docs/recipe-spec/recipe-spec.md#schema-definition

name: infrastructure-agent-installer
displayName: Infrastructure Agent
description: New Relic install recipe for the Infrastructure agent
repository: https://github.com/newrelic/infrastructure-agent

installTargets:
  - type: host
    os: linux
    platform: amazon
    platformVersion: "2"

keywords:
  - Infrastructure
  - Agent
  - Amazon Linux 2
  - Linux2

processMatch: []

validationNrql: "SELECT count(*) from SystemSample where hostname like '{{.HOSTNAME}}%' FACET entityGuid SINCE 5 minutes ago"

install:
  version: "3"
  silent: true

  tasks:
    default:
      cmds:
        - task: assert_pre_req
        - task: setup_license
        - task: install_infra
        - task: restart
        - task: assert_agent_started
        - task: assert_agent_status_ok

    assert_pre_req:
      cmds:
        - |
          IS_GREP_INSTALLED=$(which grep | wc -l)
          if [ $IS_GREP_INSTALLED -eq 0 ] ; then
            echo "grep is required to run the newrelic install. Please install grep and re-run the installation." >&2
            exit 10
          fi
        - |
          IS_SED_INSTALLED=$(which sed | wc -l)
          if [ $IS_SED_INSTALLED -eq 0 ] ; then
            echo "sed is required to run the newrelic install. Please install sed and re-run the installation." >&2
            exit 11
          fi
        - |
          IS_AWK_INSTALLED=$(which awk | wc -l)
          if [ $IS_AWK_INSTALLED -eq 0 ] ; then
            echo "awk is required to run the newrelic install. Please install awk and re-run the installation." >&2
            exit 12
          fi
        - |
          IS_CAT_INSTALLED=$(which cat | wc -l)
          if [ $IS_CAT_INSTALLED -eq 0 ] ; then
            echo "cat is required to run the newrelic install. Please install cat and re-run the installation." >&2
            exit 13
          fi
        - |
          IS_TEE_INSTALLED=$(which tee | wc -l)
          if [ $IS_TEE_INSTALLED -eq 0 ] ; then
            echo "tee is required to run the newrelic install. Please install tee and re-run the installation." >&2
            exit 14
          fi
        - |
          IS_TOUCH_INSTALLED=$(which touch | wc -l)
          if [ $IS_TOUCH_INSTALLED -eq 0 ] ; then
            echo "touch is required to run the newrelic install. Please install touch and re-run the installation." >&2
            exit 15
          fi
        - |
          IS_DOCKER_CONTAINER=$(sudo grep 'docker\|lxc' /proc/1/cgroup | wc -l)
          if [ $IS_DOCKER_CONTAINER -gt 0 ] ; then
            echo "We’ve detected that you are installing our infrastructure agent inside a docker container. This agent is not designed to be installed within a container, but rather on the host it is running on or as a separate container. For additional information visit: https://docs.newrelic.com/docs/infrastructure/install-infrastructure-agent/linux-installation/docker-container-infrastructure-monitoring/" >&2
            exit 18
          fi
        - |
          IS_WSL_CONTAINER=$(sudo grep -i 'Microsoft' /proc/version | wc -l)
          if [ $IS_WSL_CONTAINER -gt 0 ] ; then
            echo "Sorry, our infrastructure agent cannot be installed for Microsoft Windows Subsystem for Linux, this is an unsupported operating system." >&2
            exit 19
          fi

    setup_license:
      cmds:
        - |
          if [ -f /etc/newrelic-infra.yml ]; then
            sudo sed -i "/^staging/d" /etc/newrelic-infra.yml
            sudo sed -i "/^enable_process_metrics/d" /etc/newrelic-infra.yml
            sudo sed -i "/^status_server_enabled/d" /etc/newrelic-infra.yml
            sudo sed -i "/^status_server_port/d" /etc/newrelic-infra.yml

            sudo sed -i "s/^\(license_key: \).*/\1{{.NEW_RELIC_LICENSE_KEY}}/" /etc/newrelic-infra.yml
          else
            sudo touch /etc/newrelic-infra.yml
            sudo cat > /etc/newrelic-infra.yml <<EOT
          license_key: {{.NEW_RELIC_LICENSE_KEY}}
          EOT
          fi
        - |
          if [ $(echo {{.NEW_RELIC_REGION}} | grep -i staging | wc -l) -gt 0 ]; then
            sudo echo 'staging: true' >> /etc/newrelic-infra.yml
          fi
          sudo echo 'enable_process_metrics: true' >> /etc/newrelic-infra.yml
          sudo echo 'status_server_enabled: true' >> /etc/newrelic-infra.yml
          sudo echo 'status_server_port: 18003' >> /etc/newrelic-infra.yml

    install_infra:
      cmds:
        - |
          ARCH=$(uname -m)
          REPO_URL=$(echo -n "https://download.newrelic.com/infrastructure_agent/linux/yum/amazonlinux/2/$ARCH/newrelic-infra.repo")
          IS_NEWRELIC_AVAILABLE=$(curl -Ls $REPO_URL | grep "\[newrelic-infra\]" | wc -l)
          if [ $IS_NEWRELIC_AVAILABLE -eq 0 ] ; then
            echo "newrelic infrastructure agent is not available for this architecture "$ARCH". See our documentation for installing manually https://docs.newrelic.com/docs/using-new-relic/cross-product-functions/install-configure/install-new-relic" >&2
            exit 131
          fi
          sudo curl -s $REPO_URL -o /etc/yum.repos.d/newrelic-infra.repo
          sudo yum -y -q makecache --disablerepo='*' --enablerepo='newrelic-infra'
          sudo yum -y -q install newrelic-infra
      silent: true

    restart:
      cmds:
        - |
          if [ {{.IS_SYSTEMCTL}} -gt 0 ]; then
            sudo systemctl restart newrelic-infra
          else 
            if [ {{.IS_INITCTL}} -gt 0 ]; then
              sudo initctl restart newrelic-infra
            else
              sudo /etc/init.d/newrelic-infra restart
            fi
          fi
      vars:
        IS_SYSTEMCTL:
          sh: command -v systemctl | wc -l
        IS_INITCTL:
          sh: command -v initctl | wc -l

    assert_agent_started:
      cmds:
        - |
          # Ensure agent has enough time to start
          sleep 10
          IS_INFRA_INSTALLED=$(sudo ps aux | grep newrelic-infra-service | grep -v grep | wc -l)
          if [ $IS_INFRA_INSTALLED -eq 0 ] ; then
            echo "The infrastructure agent has not started after installing. Please try again later, or see our documentation for installing manually https://docs.newrelic.com/docs/using-new-relic/cross-product-functions/install-configure/install-new-relic" >&2
            exit 31
          fi

    assert_agent_status_ok:
      cmds:
        - |
          # wait for status endpoint to be ready
          sleep 5
          echo "Running agent status check..."
          statusCheckOutput=$(curl http://localhost:18003/v1/status/errors -s)
          if [ "$statusCheckOutput" == "" ]; then
            echo "infra-agent status endpoint not available" >&2
            exit 32
          fi
          if [ "$statusCheckOutput" != "{}" ]; then
            echo "infra-agent status check not healthy: $statusCheckOutput" >&2
            exit 33
          fi
          echo "Agent status check ok."

postInstall:
  info: |2
      ⚙️  The Infrastructure Agent configuration file can be found in /etc/newrelic-infra.yml
      Edit this file to make changes or configure advanced features for the agent. See the docs for options:
      https://docs.newrelic.com/docs/infrastructure/install-infrastructure-agent/configuration/infrastructure-agent-configuration-settings
      
      Note: Process monitoring has been enabled by default - all other config options are left to the user.
