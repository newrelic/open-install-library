name: mongodb-open-source-integration
displayName: MongoDB Open Source Integration
description: New Relic install recipe for default MongoDB Open Source on-host integration (via Infra-Agent)
repository: https://github.com/newrelic/nri-mongodb

dependencies:
  - infrastructure-agent-installer

installTargets:
  - type: host
    os: linux
    platform: "amazon"
    platformVersion: "2"
  - type: host
    os: linux
    platform: "redhat"
  - type: host
    os: linux
    platform: "centos"

keywords:
  - Infrastructure
  - Integration
  - mongodb

processMatch:
  - mongodb
  - mongod

logMatch:
  - name: MongoDB log
    file: /var/log/mongodb/mongod.log

validationNrql: "SELECT count(*) from MongoDatabaseSample where hostname like '{{.HOSTNAME}}%' FACET entityGuid SINCE 10 minutes ago"

successLinkConfig:
  type: EXPLORER

preInstall:
  info: |2
      To capture data from the MongoDB integration, you'll first need to meet these prerequisites:
      - MongoDB version requirement (see https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/mongodb-monitoring-integration#comp-req)
      - User with clusterMonitor and listCollections roles

      In the MongoDB shell, execute the following commands to create a
      listCollections role and a new user, then assign clusterMonitor and
      listCollections roles to the new user.
      Note: username, password, and similar user-specific values must be replaced.

      In the MongoDB shell run the following command
      > rs.initiate()

      Switch to the admin database
      > use admin

      Use the following command to create the listCollections role:
      > db.createRole({role: "listCollections", privileges: [{ resource: {db:"",collection:""}, actions: ["listCollections"] }], roles: []})

      Use the following commands to create a new user, and assign clusterMonitor and listCollections roles to the user:
      > db.createUser({ user: "username", pwd: "password", roles: [ "clusterMonitor", "listCollections" ]})

  requireAtDiscovery: |
    MONGODB_EXISTS=$(mongo --eval 'db.runCommand({ connectionStatus: 1 })' | grep "ok" | wc -l)
    if [ $MONGODB_EXISTS -eq 0 ]; then
      exit 132
    fi
    exit 1

install:
  version: "3"
  silent: true
  tasks:
    default:
      cmds:
        - task: setup

    setup:
      cmds:
        - |
          exit 131

postInstall:
  info: |2
      ⚙️  The MongoDB configuration file can be found in /etc/newrelic-infra/integrations.d/mongodb-config.yml
      Edit this file to make changes or configure advanced features for this integration. See the docs for options:
      https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/mongodb-monitoring-integration#config
