name: nagios-open-source-integration
displayName: Nagios Integration
description: New Relic install recipe for default Nagios Open Source on-host integration (via Infra-Agent)
repository: https://github.com/newrelic/nri-nagios

dependencies:
  - infrastructure-agent-installer

installTargets:
  - type: host
    os: linux
    platform: amazon
    platformVersion: "2"
  - type: host
    os: linux
    platform: "centos"
  - type: host
    os: linux
    platform: "redhat"

keywords:
  - Infrastructure
  - Integration
  - nagios

processMatch:
  - nagios

logMatch:
  - name: nagios
    file: /usr/local/nagios/var/nagios.log

# The newrelic-cli will use this integration name to check the config file(s)
# that were setup during the installation to ensure the integration
# runs properly with the defined environment variables
validationIntegration: nagios

# DEPRECATED
validationNrql: "SELECT count(*) from NagiosServiceCheckSample FACET entityGuid SINCE 10 minutes ago WHERE reportingAgent = '{{.INFRA_KEY}}'"

preInstall:
  info: |2
      To capture data from the Nagios integration, you'll first need to meet these prerequisites:
      - Must have an existing service that conforms to the Nagios Plugin API

install:
  version: "3"
  silent: true

  tasks:
    default:
      cmds:
        - task: assert_pre_req
        - task: setup
        - task: restart

    assert_pre_req:
      cmds:
        - |
          IS_INFRA_INSTALLED=$(sudo ps aux | grep newrelic-infra-service | grep -v grep | wc -l)
          if [ $IS_INFRA_INSTALLED -eq 0 ] ; then
            echo "The infrastructure agent is required to install this integration, we recommend going through our guided install path for this pre-requisite which can be found here:  https://docs.newrelic.com/docs/full-stack-observability/observe-everything/get-started/new-relic-guided-install-overview" >&2
            exit 1
          fi
        - |
          NEW_RELIC_ASSUME_YES="{{.NEW_RELIC_ASSUME_YES}}"
          PLUGINS_EXIST=$(ls /usr/local/nagios/libexec | grep check_users | wc -l)
          if [ $PLUGINS_EXIST -eq 0 ]; then
            echo "[INFO] Nagios plugins not found. Nagios plugins are a prerequisite for this integration." >&2
          
            if [[ "$NEW_RELIC_ASSUME_YES" != "true" ]] ; then 
              printf "Do you want to proceed with downloading and installing Nagios plugins? This involves downloading third-party software not hosted by New Relic. y/n (default: y): "
              read -r USER_CONFIRMATION
              USER_CONFIRMATION=${USER_CONFIRMATION:-y}
      
              if [ "$USER_CONFIRMATION" != "y" ]; then
                echo "Nagios plugins are required for this integration. Please install them and re-run the installation." >&2
                exit 3
              fi
            fi
    
            echo "[INFO] Proceeding with Nagios plugins download..." >&2
          
            # Fetch the download page content, following redirects
            DOWNLOAD_PAGE_URL="https://nagios-plugins.org/download/"
            DOWNLOAD_PAGE=$(curl -sL "$DOWNLOAD_PAGE_URL")
          
            # Extract the latest version and download URL using grep with -E for extended regex
            DOWNLOAD_URL=$(echo "$DOWNLOAD_PAGE" | grep -oE 'nagios-plugins-([0-9]+\.[0-9]+(\.[0-9]+)?).tar\.gz' | head -n 1)
          
            # Check if DOWNLOAD_URL is empty
            if [ -z "$DOWNLOAD_URL" ]; then
              echo "Failed to fetch the latest Nagios plugins version from the download page." >&2
              exit 2
            fi
          
            # Construct the full download URL
            DOWNLOAD_URL="https://nagios-plugins.org/download/$DOWNLOAD_URL"
          
            # Download and install plugins
            if curl -sL "$DOWNLOAD_URL" -o nagios-plugins.tar.gz; then
              tar -xzf nagios-plugins.tar.gz || { echo "Failed to extract plugins." >&2; exit 2; }
          
              # Extract version from filename to use in cd command
              VERSION=$(echo "$DOWNLOAD_URL" | grep -oE 'nagios-plugins-([0-9]+\.[0-9]+(\.[0-9]+)?).tar\.gz' | sed 's/nagios-plugins-//' | sed 's/.tar.gz//')
              cd "nagios-plugins-$VERSION" || { echo "Failed to enter directory." >&2; exit 2; }
          
              # Install prerequisites if missing
              echo "[INFO] Installing prerequisites... Please wait, this may take some time."
              sudo yum install -y gcc make > /dev/null 2>&1
          
              # Run setup if configure is missing
              if [ ! -f "./configure" ]; then
                echo "Configure script not found, running setup..."
                ./tools/setup || { echo "Failed to run setup." >&2; exit 2; }
              fi
          
              # Compile and install plugins
              if ./configure --with-nagios-user=nagios --with-nagios-group=nagios --prefix=/usr/local/nagios > /dev/null 2>&1 && \
                make > /dev/null 2>&1 && \
                sudo make install > /dev/null 2>&1; then
                echo "[INFO] Nagios plugins installed successfully."
              else
                echo "Failed to build and install Nagios plugins." >&2
                exit 2
              fi       
            else
              echo "Failed to download Nagios plugins." >&2
              exit 2;
            fi
          else
            echo "Nagios plugins are already installed."
          fi

    setup:
      label: "Installing Nagios integration..."
      cmds:
        - |
          sudo mkdir -p "/etc/newrelic-infra/integrations.d"
        - |
          sudo yum -q makecache -y --disablerepo='*' --enablerepo='newrelic-infra'
        - |
          sudo yum install nri-nagios -y
        - |
          if [ -f /etc/newrelic-infra/integrations.d/nagios-config.yml ]; then
            sudo rm /etc/newrelic-infra/integrations.d/nagios-config.yml;
          fi

          sudo cp /etc/newrelic-infra/integrations.d/nagios-config.yml.sample /etc/newrelic-infra/integrations.d/nagios-config.yml;

        - |
          sudo tee /etc/newrelic-infra/integrations.d/nagios-service-checks.yml > /dev/null <<"EOT"
          # This file must have permissions 0600 on linux.
          # File permissions are not checked on Windows, so
          # it is the user's responsibility to set permissions
          # appropriately.
          service_checks:
              # name is a user-defined name to identify the service check
            - name: check_users
              # command is a command whose arguments are provided as an array of strings
              command: ["/usr/local/nagios/libexec/check_users", "-w", "5", "-c", "10"]
              parse_output: true
              # labels are an optional block that provide additional user-defined 
              # key-value pairs to identify and group the service check
              labels:
                env: staging
                key1: val1
            - name: check_yum
              command: ["/usr/local/nagios/libexec/check_ssh", "localhost"]
              parse_output: true
          EOT
        - |
          sudo chmod 0600 /etc/newrelic-infra/integrations.d/nagios-service-checks.yml

    restart:
      cmds:
        - |
          if [ {{.IS_SYSTEMCTL}} -gt 0 ]; then
            sudo systemctl restart newrelic-infra
          else 
            if [ {{.IS_INITCTL}} -gt 0 ]; then
              sudo initctl restart newrelic-infra
            else
              sudo /etc/init.d/newrelic-infra restart
            fi
          fi
      vars:
        IS_SYSTEMCTL:
          sh: command -v systemctl | wc -l
        IS_INITCTL:
          sh: command -v initctl | wc -l

postInstall:
  info: |2
      ⚙️  The Nagios configuration file can be found in /etc/newrelic-infra/integrations.d/nagios-config.yml
      ⚙️  The service checks configuration file can be found in /etc/newrelic-infra/integrations.d/service_checks.yml
      Edit these files to make changes or configure advanced features for this integration. See the docs for options:
      https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/nagios-monitoring-integration#config
