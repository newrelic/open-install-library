# Visit our schema definition for additional information on this file format
# https://github.com/newrelic/open-install-library/blob/main/docs/recipe-spec/recipe-spec.md#schema-definition
name: mysql-open-source-integration
displayName: MySQL Open Source Integration
description: New Relic install recipe for default MySQL Open Source on-host integration (via Infra-Agent)
repository: https://github.com/newrelic/nri-mysql

dependencies:
  - infrastructure-agent-installer

installTargets:
  - type: host
    os: linux
    platform: "suse"

# keyword convention for dealing with search terms that could land someone on this instrumentation project
keywords:
  - Infrastructure
  - Integration
  - mysql

# Examine Infrastructure events for correlated data
processMatch:
  - mysqld

# Matches partial list of the Log forwarding parameters
# https://docs.newrelic.com/docs/logs/enable-log-management-new-relic/enable-log-monitoring-new-relic/forward-your-logs-using-infrastructure-agent#parameters
logMatch:
  - name: mysql
    file: /var/log/mysql/mysqld.log
  - name: mysql-error
    file: /var/log/mysql/error.log
    attributes:
      logtype: mysql-error

# NRQL the newrelic-cli will use to validate the agent/integration this recipe
# installed is successfully sending data to New Relic
validationNrql: "SELECT count(*) from MysqlSample where hostname like '{{.HOSTNAME}}%' FACET entityGuid SINCE 10 minutes ago"

preInstall:
  info: |2
      To capture data from the MySQL integration, you'll first need to meet these prerequisites:
      - MySQL version requirement (see https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/mysql-monitoring-integration#req)
      - User with select and replication permissions
      To create a new user, use these commands as reference (Note: username,
      password, and similar user-specific values must be replaced):
      > sudo mysql -e "CREATE USER 'newrelic'@'localhost' IDENTIFIED BY 'YOUR_SELECTED_PASSWORD' WITH MAX_USER_CONNECTIONS 5;"
      > sudo mysql -e "GRANT REPLICATION CLIENT ON *.* TO 'newrelic'@'localhost';"
      > sudo mysql -e "GRANT SELECT ON *.* TO 'newrelic'@'localhost';"

install:
  version: "3"
  silent: true

  tasks:
    default:
      cmds:
        - task: assert_infra
        - task: input_assert
          vars:
            MAX_RETRIES: 3
        - task: setup
          vars:
            NR_CLI_DB_HOSTNAME:
              sh: sudo cat /tmp/mysql-ohai-hostname
            NR_CLI_DB_PORT:
              sh: sudo cat /tmp/mysql-ohai-port
            NR_CLI_DB_USERNAME:
              sh: sudo cat /tmp/mysql-ohai-username
            NR_CLI_DB_PASSWORD:
              sh: sudo cat /tmp/mysql-ohai-password
        - task: restart

    assert_infra:
      cmds:
        - |
          IS_INFRA_INSTALLED=$(sudo ps aux | grep newrelic-infra-service | grep -v grep | wc -l)
          if [ $IS_INFRA_INSTALLED -eq 0 ] ; then
            echo "The infrastructure agent is required to install this integration, we recommend going through our guided install path for this pre-requisite which can be found here:  https://docs.newrelic.com/docs/new-relic-guided-installation-overview" >> /dev/stderr
            exit 1
          fi

    input_assert:
      cmds:
        - |
          TRIES=0
          while [ $TRIES -lt {{.MAX_RETRIES}} ]; do
            printf "\nMySQL Hostname (default: localhost): "
            read -r HOSTNAME
            HOSTNAME=${HOSTNAME:-localhost}
            printf "MySQL port (default: 3306): "
            read -r PORT
            PORT=${PORT:-3306}
            ((TRIES++))
            CAN_CONNECT=$(curl $HOSTNAME:$PORT 2>&1 | awk -F'[()]' '{print $2}')
            CAN_CONNECT=${CAN_CONNECT:-0}
            if [ $CAN_CONNECT == "6" ]; then
              printf "\n[Error]: Provided host ($HOSTNAME) cannot be reached. See https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/mysql-monitoring-integration#config for more info.\n" >> /dev/stderr
              if [ ! $TRIES -lt {{.MAX_RETRIES}} ]; then exit 6; fi
              echo "Please try again"
            elif [ $CAN_CONNECT == "7" ]; then
              printf "\n[Error]: Connections to port ($PORT) are being refused. See https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/mysql-monitoring-integration#config for more info.\n" >> /dev/stderr
              if [ ! $TRIES -lt {{.MAX_RETRIES}} ]; then exit 7; fi
              echo "Please try again"
            else
              echo $HOSTNAME > /tmp/mysql-ohai-hostname
              echo $PORT > /tmp/mysql-ohai-port
              break
            fi
          done

          TRIES=0
          EXPECTED_SELECT_REPLICATION=$(echo 'SELECT, REPLICATION')
          EXPECTED_ALL_PRIVILEGES=$(echo 'ALL PRIVILEGES')
          while [ $TRIES -lt {{.MAX_RETRIES}} ]; do
            printf "MySQL Username: "
            read -r USERNAME
            printf "MySQL Password: "
            stty -echo
            read -r PASSWORD
            stty echo
            ((TRIES++))
            if [ "$USERNAME" == "" ] || [ "$PASSWORD" == "" ]; then
              printf "\n[Error]: Please provide a valid Username and Password. Fields cannot be blank.\n" >> /dev/stderr
              if [ ! $TRIES -lt {{.MAX_RETRIES}} ]; then exit 4; else continue; fi
              echo "Please try again"
              continue
            fi
            CHECK_USER=$(mysql -u$USERNAME --port $PORT -p$PASSWORD -e "SELECT USER FROM mysql.user" 2>&1 | grep -v "mysql: [Warning] Using a password on the command line interface can be insecure." | grep $USERNAME | awk '{print $1}')
            if [ "$CHECK_USER" == "$USERNAME" ]; then
              CHECK_DB=$(mysql -u$USERNAME --port $PORT -p$PASSWORD -e "SHOW GRANTS FOR CURRENT_USER" 2>&1 | grep -v "mysql: [Warning] Using a password on the command line interface can be insecure." | grep "GRANT" | awk '{print $2, $3}')
              if [ $(echo $CHECK_DB | grep "$EXPECTED_SELECT_REPLICATION" | wc -l) -gt 0 ] || [ $(echo $CHECK_DB | grep "$EXPECTED_ALL_PRIVILEGES" | wc -l) -gt 0 ]; then
                echo $USERNAME > /tmp/mysql-ohai-username
                echo $PASSWORD > /tmp/mysql-ohai-password
                break
              fi
            fi
            if [ "$CHECK_USER" != "$USERNAME" ]; then
              printf "\n[Error]: Provided credentials have no access to mysql. See https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/mysql-monitoring-integration#config for more info.\n" >> /dev/stderr
              if [ ! $TRIES -lt {{.MAX_RETRIES}} ]; then exit 2; else continue; fi
              echo "Please try again"
            fi
            if [ $(echo $CHECK_DB | grep "$EXPECTED_SELECT_REPLICATION" | wc -l) -eq 0 ] || [ $(echo $CHECK_DB | grep "$EXPECTED_ALL_PRIVILEGES" | wc -l) -eq 0 ]; then
              printf "\n[Error]: Provided user does not have the minimum permissions. See https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/mysql-monitoring-integration#config for more info.\n" >> /dev/stderr
              if [ ! $TRIES -lt {{.MAX_RETRIES}} ]; then exit 2; fi
              echo "Please try again"
            fi
          done
          printf "\n[OK] All checks passed. Installing MySQL Integration...\n\n"

    setup:
      label: "Installing MySQL integration..."
      cmds:
        - |
          sudo rm /tmp/mysql-ohai*
        - |
          sudo mkdir -p "/etc/newrelic-infra/integrations.d"
        - |
          sudo zypper -n ref -r newrelic-infra
        - |
          sudo zypper -n install nri-mysql
        - |
          if [ -f /etc/newrelic-infra/integrations.d/mysql-config.yml ]; then
            sudo rm /etc/newrelic-infra/integrations.d/mysql-config.yml;
          fi

          sudo touch /etc/newrelic-infra/integrations.d/mysql-config.yml;
        - |
          sudo tee -a /etc/newrelic-infra/integrations.d/mysql-config.yml > /dev/null <<"EOT"
          integration_name: com.newrelic.mysql

          instances:
            - name: mysql-status
              command: status
              arguments:
                hostname: {{.NR_CLI_DB_HOSTNAME}}
                port: {{.NR_CLI_DB_PORT}}
                username: {{.NR_CLI_DB_USERNAME}}
                password: {{.NR_CLI_DB_PASSWORD}}
                database: {{.NR_CLI_DATABASE}}
                extended_metrics: true
                extended_innodb_metrics: true
                extended_myisam_metrics: true
                remote_monitoring: true
          EOT

    restart:
      cmds:
        - |
          if [ {{.IS_SYSTEMCTL}} -gt 0 ]; then
            sudo systemctl restart newrelic-infra
          else
            if [ {{.IS_INITCTL}} -gt 0 ]; then
              sudo initctl restart newrelic-infra
            else
              sudo /etc/init.d/newrelic-infra restart
            fi
          fi
      vars:
        IS_SYSTEMCTL:
          sh: command -v systemctl | wc -l
        IS_INITCTL:
          sh: command -v initctl | wc -l

postInstall:
  info: |2
      ⚙️  The MySQL configuration file can be found in /etc/newrelic-infra/integrations.d/mysql-config.yml
      Edit this file to make changes or configure advanced features for this integration. See the docs for options:
      https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/mysql-monitoring-integration#config
