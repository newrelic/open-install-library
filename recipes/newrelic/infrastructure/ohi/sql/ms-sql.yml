# Visit our schema definition for additional information on this file format
# https://github.com/newrelic/open-install-library/blob/main/docs/recipe-spec/recipe-spec.md#schema-definition

name: mssql-server-integration-installer
displayName: Microsoft Sql Server Integration Installer
description: New Relic install recipe for the Microsoft SqlServer Integration
repository: https://github.com/newrelic/nri-mssql

dependencies:
  - infrastructure-agent-installer

installTargets:
  - type: host
    os: windows

keywords:
  - Integration
  - SqlServer
  - Windows

processMatch:
  - sqlservr.exe

validationNrql: "SELECT count(*) from MssqlInstanceSample where hostname like '{{.HOSTNAME}}' FACET entityGuid SINCE 10 minutes ago"

# Prompts for input from the user. These variables then become
# available to go-task in the form of {{.VAR_NAME}}
inputVars:
  - name: "NR_CLI_DB_USERNAME"
    prompt: "MSSQL Username"
  - name: "NR_CLI_DB_PASSWORD"
    prompt: "MSSQL Password"
    secret: true
  - name: "NR_CLI_DB_HOSTNAME"
    prompt: "SQL Server Hostname or IP (default: 127.0.0.1)"
    default: "127.0.0.1"
  - name: "NR_CLI_DB_PORT"
    prompt: "SQL Server Port (default: 1433)"
    default: 1433

preInstall:
  info: |2
      To capture data from the Microsoft SQL Server integration, you'll first need to meet these prerequisites:
      - Microsoft SQL Server version requirement (see https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/microsoft-sql-server-monitoring-integration#about)
      - Microsoft SQL Server user with user privileges for both CONNECT and VIEW SERVER STATE, and READ access permissions

install:
  version: "3"
  silent: true

  tasks:
    default:
      cmds:
        - task: assert_pre_req
        - task: remove_any_previous
        - task: install

    assert_pre_req:
      cmds:
        - powershell -command '$output = Get-Service "newrelic-infra"; if ( -not ($output -like "*newrelic-infra*") ) { Write-Error "The newrelic-infra agent service is not installed on the host, but is required to install this integration. Please install the newrelic infrastructure agent."; Exit 1; }'
        - powershell -command '$output = sqlcmd -S "{{.NR_CLI_DB_HOSTNAME}},{{.NR_CLI_DB_PORT}}" -U {{.NR_CLI_DB_USERNAME}} -P "{{.NR_CLI_DB_PASSWORD}}" -Q "SELECT GETDATE()"; if ( -not ($output -like "*rows affected*") ) { Write-Error "Cannot connect to the SQL Server instance {{.NR_CLI_DB_HOSTNAME}} with the provided username {{.NR_CLI_DB_USERNAME}} and password."; Exit 2; }'

    remove_any_previous:
      ignore_error: true
      cmds:
        - |
          powershell -command '
          function Find-UninstallGuids {
            param (
              [Parameter(Mandatory)]
              [string]$Match
            )

            $baseKeys = Get-ChildItem -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall `
            | % { $_.Name.TrimStart("HKEY_LOCAL_MACHINE\") }

            $wowKeys = Get-ChildItem -Path HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall `
            | % { $_.Name.TrimStart("HKEY_LOCAL_MACHINE\") }

            $allKeys = $baseKeys + $wowKeys

            $uninstallIds = New-Object System.Collections.ArrayList
            foreach ($key in $allKeys) {
              $keyData = Get-Item -Path HKLM:\$key
              $name = $keyData.GetValue("DisplayName")
              if ($name -and $name -match $Match) {
                $keyId = Split-Path $key -Leaf
                $uninstallIds.Add($keyId) | Out-Null
              }
            }

            if ($uninstallIds.Count -eq 0) {
              return @()
            }

            return $uninstallIds
          }

          $uninstallIds = Find-UninstallGuids -Match "nri-mssql"
          foreach ($uninstallId in $uninstallIds) {
            $uninstallCommand = "msiexec /x """ + $uninstallId + """ /qn"
            Invoke-Expression $uninstallCommand
            # wait here to allow uninstall command to complete since it returns without waiting
            Start-Sleep -s 15
          }
          '

    install:
      label: "Installing Microsoft SQL Server integration..."
      cmds:
        - powershell -command '(New-Object System.Net.WebClient).DownloadFile("http://download.newrelic.com/infrastructure_agent/windows/integrations/nri-mssql/nri-mssql-amd64.msi", "$env:TEMP\nri-mssql-amd64.msi");'
        - powershell -command 'msiexec.exe /qn /i "$env:TEMP\nri-mssql-amd64.msi" | Out-Null;'
        - powershell -command '$OhiConfig = "C:\\Program Files\\New Relic\\newrelic-infra\\integrations.d\\mssql-config.yml"; if (Test-Path $OhiConfig) { Remove-Item $OhiConfig };'
        - powershell -command 'Add-Content -Path "C:\\Program Files\\New Relic\\newrelic-infra\\integrations.d\\mssql-config.yml" -Value "integration_name`:` com.newrelic.mssql" -Force | Out-Null;'
        - powershell -command 'Add-Content -Path "C:\\Program Files\\New Relic\\newrelic-infra\\integrations.d\\mssql-config.yml" -Value "instances`:` " -Force | Out-Null;'
        - powershell -command 'Add-Content -Path "C:\\Program Files\\New Relic\\newrelic-infra\\integrations.d\\mssql-config.yml" -Value "  - name`:` mssql-server" -Force | Out-Null;'
        - powershell -command 'Add-Content -Path "C:\\Program Files\\New Relic\\newrelic-infra\\integrations.d\\mssql-config.yml" -Value "    command`:` all_data" -Force | Out-Null;'
        - powershell -command 'Add-Content -Path "C:\\Program Files\\New Relic\\newrelic-infra\\integrations.d\\mssql-config.yml" -Value "    arguments`:` " -Force | Out-Null;'
        - powershell -command 'Add-Content -Path "C:\\Program Files\\New Relic\\newrelic-infra\\integrations.d\\mssql-config.yml" -Value "      hostname`:` {{.NR_CLI_DB_HOSTNAME}}" -Force | Out-Null;'
        - powershell -command 'Add-Content -Path "C:\\Program Files\\New Relic\\newrelic-infra\\integrations.d\\mssql-config.yml" -Value "      username`:` {{.NR_CLI_DB_USERNAME}}" -Force | Out-Null;'
        - powershell -command 'Add-Content -Path "C:\\Program Files\\New Relic\\newrelic-infra\\integrations.d\\mssql-config.yml" -Value "      password`:` {{.NR_CLI_DB_PASSWORD}}" -Force | Out-Null;'
        - powershell -command 'Add-Content -Path "C:\\Program Files\\New Relic\\newrelic-infra\\integrations.d\\mssql-config.yml" -Value "      port`:` {{.NR_CLI_DB_PORT}}" -Force | Out-Null;'
        - powershell -command 'Restart-Service newrelic-infra'

postInstall:
  info: |2
      ⚙️  The Microsoft SQL Server configuration file can be found in C:\Program Files\New Relic\newrelic-infra\integrations.d\mssql-config.yml
      Edit this file to make changes or configure advanced features for this integration. See the docs for options:
      https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/microsoft-sql-server-monitoring-integration#config
