# Visit our schema definition for additional information on this file format
# https://github.com/newrelic/open-install-library/blob/main/docs/recipe-spec/recipe-spec.md#schema-definition

name: nginx-open-source-integration
displayName: NGINX Open Source Integration
description: New Relic install recipe for default NGINX Open Source on-host integration (via Infra-Agent)
repository: https://github.com/newrelic/nri-nginx

dependencies:
  - infrastructure-agent-installer

installTargets:
  - type: host
    os: linux
    platform: suse

keywords:
  - Infrastructure
  - Integration
  - nginx

processMatch:
  - nginx

logMatch:
  - name: nginx
    file: /var/log/nginx/access.log* # assumes log rotation like access.log.0, access.log.1, etc.
    attributes:
      logtype: nginx
  - name: nginx
    file: /var/log/nginx/error.log* # assumes log rotation like error.log.0, error.log.1, etc.
    attributes:
      logtype: nginx-error

validationNrql: "SELECT count(*) from NginxSample where hostname like '{{.HOSTNAME}}%' FACET entityGuid SINCE 10 minutes ago"

successLinkConfig:
  type: EXPLORER

preInstall:
  info: |2
      To capture data from the NGINX integration, you'll first need to enable
      and configure the applicable extension module:
      - For NGINX Open Source: HTTP stub status module 
      - For NGINX Plus: HTTP status module or HTTP API module
      - See https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/nginx-monitoring-integration#config for more info.

install:
  version: "3"
  silent: true
  tasks:
    default:
      cmds:
        - task: assert_infra
        - task: input_assert
          vars:
            MAX_RETRIES: 3
        - task: restart

    assert_infra:
      cmds:
        - |
          IS_INFRA_INSTALLED=$(sudo ps aux | grep newrelic-infra-service | grep -v grep | wc -l)
          if [ $IS_INFRA_INSTALLED -eq 0 ] ; then
            echo "The infrastructure agent is required to install this integration, we recommend going through our guided install path for this pre-requisite which can be found here:  https://docs.newrelic.com/docs/new-relic-guided-installation-overview" >&2
            exit 1
          fi

    input_assert:
      cmds:
        - |
          tries=0

          # Check Env Vars
          NEW_RELIC_ASSUME_YES="{{.NEW_RELIC_ASSUME_YES}}"
          NR_CLI_STUB_STATUS_URL="{{.NR_CLI_STUB_STATUS_URL}}"

          stub_location=""
          nginx_version=""
          # if it's not NGINX PLUS
          if [ $(nginx -V 2>&1 | grep -o nginx-plus | wc -l) -eq 0 ] ; then
            # extract NGINX status url
            stub_location=$(sudo nginx -T 2>&1 | grep -ozP "(?s:.*\s)\Klocation(?s).*stub_status" | grep -aoP "\/([^\s]+)")
          else
            nginx_version="plus"
          fi

          # Set Defaults
          NR_CLI_STUB_STATUS_URL=${NR_CLI_STUB_STATUS_URL:-'http://127.0.0.1/status'}

          if [[ "$NEW_RELIC_ASSUME_YES" != "true" ]]; then
            while [ $tries -lt {{.MAX_RETRIES}} ]; do
              if [ "$stub_location" == "" ]; then
                printf "\nNGINX status URL (default: http://127.0.0.1/status): "
                read -r NR_CLI_STUB_STATUS_URL
                NR_CLI_STUB_STATUS_URL=${NR_CLI_STUB_STATUS_URL:-http://127.0.0.1/status}
              else
                NR_CLI_STUB_STATUS_URL="http://127.0.0.1${stub_location}"
                stub_location=""
              fi
              code=$(curl -I $NR_CLI_STUB_STATUS_URL -w %{response_code} -so '/dev/null')
              if [ $code == "200" ]; then
                break
              fi
              ((tries++))
              echo "The status url provided $NR_CLI_STUB_STATUS_URL couldn't be reached. Try again with a correct one"
              if [ ! $tries -lt {{.MAX_RETRIES}} ]; then
                if [ $(sudo nginx -V 2>&1 | grep -o "with-http_stub_status_module" | wc -l) -eq 0 ] ; then
                  echo "with-http_stub_status_module should be enabled in order to monitor NGINX \n - See https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/nginx-monitoring-integration#config for more info." >&2
                  exit 4
                fi
                if [ "$nginx_version" == "plus" ]; then
                  echo "NGINX PLUS API status page should be set up with a locally accessible URL in the conf server block. \n - See https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/nginx-monitoring-integration#config for more info." >&2
                  exit 5
                fi
                echo "NGINX HTTP status page should be set up with a locally accessible URL in the conf server block. \n - See https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/nginx-monitoring-integration#config for more info." >&2
                exit 2
              fi
            done
          fi

          STATUS_RESPONSE=$(curl $NR_CLI_STUB_STATUS_URL -s | iconv -f utf-8 -t utf-8 -c)
          if [ ! $(echo $STATUS_RESPONSE | grep "Active connections:" | wc -l) -eq 0 ] ; then
            NR_CLI_STATUS_MODULE="ngx_http_stub_status_module"
          elif [ ! $(echo $STATUS_RESPONSE | grep '"nginx_version"' | wc -l) -eq 0 ] ; then
            NR_CLI_STATUS_MODULE="ngx_http_status_module"
          elif [ ! $(echo $STATUS_RESPONSE | grep '"nginx"' | wc -l) -eq 0 ] ; then
            NR_CLI_STATUS_MODULE="ngx_http_api_module"
          else
            if [ "$nginx_version" == "plus" ]; then
              echo "The endpoint provided is not an NGINX PLUS api endpoint. \n - See https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/nginx-monitoring-integration#config for more info." >&2
              exit 6
            fi
            echo "The endpoint provided is not an NGINX status endpoint. \n - See https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/nginx-monitoring-integration#config for more info." >&2
            exit 3
          fi
          printf "\n[OK] All checks passed. Installing Nginx Integration...\n\n"

          # Install the integration
          sudo mkdir -p "/etc/newrelic-infra/integrations.d"
          sudo zypper -n ref -r newrelic-infra
          sudo zypper -n install nri-nginx

          if [ -f /etc/newrelic-infra/integrations.d/nginx-config.yml ]; then
            sudo rm /etc/newrelic-infra/integrations.d/nginx-config.yml;
          fi
          sudo touch /etc/newrelic-infra/integrations.d/nginx-config.yml;
          sudo tee -a /etc/newrelic-infra/integrations.d/nginx-config.yml > /dev/null <<EOT
          integration_name: com.newrelic.nginx

          instances:
            - name: nginx-server-metrics
              command: metrics
              arguments:
                # If you're using ngx_http_api_module be certain to use the full path up to and including the version number
                status_url: $NR_CLI_STUB_STATUS_URL

                # Name of Nginx status module OHI is to query against. discover | ngx_http_stub_status_module | ngx_http_status_module | ngx_http_api_module
                status_module: $NR_CLI_STATUS_MODULE

                # New users should leave this property as 'true', to identify the
                # monitored entities as 'remote'. Setting this property to 'false' (the
                # default value) is deprecated and will be removed soon, disallowing
                # entities that are identified as 'local';.
                # Please check the documentation to get more information about local
                # versus remote entities:
                # https://github.com/newrelic/infra-integrations-sdk/blob/master/docs/entity-definition.md
                remote_monitoring: true
                # validate_certs: true
                # default: true If the status URL is HTTPS with a self-signed certificate, set this to false if you want to avoid certificate validation

            - name: nginx-server-inventory
              command: inventory
              arguments:
                config_path: /etc/nginx/nginx.conf

                # New users should leave this property as 'true', to identify the
                # monitored entities as 'remote'. Setting this property to 'false' (the
                # default value) is deprecated and will be removed soon, disallowing
                # entities that are identified as 'local'.
                # Please check the documentation to get more information about local
                # versus remote entities:
                # https://github.com/newrelic/infra-integrations-sdk/blob/master/docs/entity-definition.md
                remote_monitoring: true #new users should leave remote_monitoring = true

                # status_url is used to identify the monitored entity to which the inventory will be attached.
                status_url: $NR_CLI_STUB_STATUS_URL
          EOT

    restart:
      cmds:
        - |
          if [ {{.IS_SYSTEMCTL}} -gt 0 ]; then
            sudo systemctl restart newrelic-infra
          else
            if [ {{.IS_INITCTL}} -gt 0 ]; then
              sudo initctl restart newrelic-infra
            else
              sudo /etc/init.d/newrelic-infra restart
            fi
          fi
      vars:
        IS_SYSTEMCTL:
          sh: command -v systemctl | wc -l
        IS_INITCTL:
          sh: command -v initctl | wc -l

postInstall:
  info: |2
      ⚙️  The Nginx configuration file can be found in /etc/newrelic-infra/integrations.d/nginx-config.yml
      Edit this file to make changes or configure advanced features for this integration. See the docs for options:
      https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/nginx-monitoring-integration#config
